- name: helm utility should be installed
  become: yes
  block:
    - name: download helm distribution and validate checksum
      ansible.builtin.get_url:
        url: "{{ helm_releases_url }}/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}.tar.gz"
        dest: /tmp/
        checksum: "sha256:{{ helm_executable_sha256_checksum }}"
        mode: 0755
        owner: root
        group: root
      changed_when: no

    - name: create target folder for helm unarchiving
      ansible.builtin.file:
        path: "/tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}"
        state: directory
        mode: 0755
        owner: root
        group: root
      changed_when: no

    - name: unarchive the helm distribution and extract binary
      ansible.builtin.unarchive:
        remote_src: yes
        src: "/tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}.tar.gz"
        dest: "/tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}"
      changed_when: no

    - name: copy binary of helm
      ansible.builtin.copy:
        remote_src: yes
        src: /tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}/{{ helm_os }}-{{ helm_arch }}/helm
        dest: "{{ helm_executable }}"
        mode: 0755
        owner: root
        group: root
  
  always:
    - name: remove helm temporary files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}"
        - "/tmp/helm-v{{ helm_version }}-{{ helm_os }}-{{ helm_arch }}.tar.gz"
      changed_when: no

- name: get helm version
  become: yes
  ansible.builtin.command: 
    cmd: "{{ helm_executable }} version"
  register: helm_installed_version
  changed_when: no

- name: print installed helm version
  ansible.builtin.debug:
    var: helm_installed_version.stdout
    verbosity: 1